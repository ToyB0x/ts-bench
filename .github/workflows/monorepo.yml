name: monorepo
on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      analyze-size:
        description: 'analyze size of the repository'
        required: false
        type: number

permissions:
  contents: read # for checkout repository
  pull-requests: write # for creating/updating PR comments

env:
  DB_FILE_NAME_TEST: test.db # Default database file name for tests
  DB_FILE_NAME_REPORT: report.db # Default database file name for reports
  UPLOAD_ARTIFACT_NAME: report

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup & Restore Node cache
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version-file: 'package.json'

      - name: Install all packages
        run: pnpm install --frozen-lockfile

      - name: Restore turbo cache
        uses: actions/cache@v4
        with:
          path: .turbo/cache
          key:
            turbo/${{ github.job }}/${{ github.ref_name }}/${{ github.sha }}
          restore-keys: |
            turbo/${{ github.job }}/${{ github.ref_name }}/
            turbo/${{ github.job }}/

      - name: Lint
        run: pnpm lint

      - name: Build check
        run: pnpm build
        env:
          DB_FILE_NAME: ${{ github.workspace }}/${{ env.DB_FILE_NAME_TEST }}

      - name: Pre-Render test site (check command with seed)
        run: pnpm build:prerender:with-seed
        env:
          DB_FILE_NAME: ${{ github.workspace }}/${{ env.DB_FILE_NAME_TEST }}

      - name: Type check
        run: pnpm typecheck
        env:
          DB_FILE_NAME: ${{ github.workspace }}/${{ env.DB_FILE_NAME_TEST }}

      - name: Test
        run: pnpm test
        env:
          DB_FILE_NAME: ${{ github.workspace }}/${{ env.DB_FILE_NAME_TEST }}

      - name: Download previous main branch report
        uses: dawidd6/action-download-artifact@v11
        with:
          branch: main
          workflow: monorepo.yml
          workflow_conclusion: success
          name: ${{ env.UPLOAD_ARTIFACT_NAME }}
          if_no_artifact_found: warn
          # automatically extracts the artifact to file "repo.sqlite"

      - name: Migrate check
        working-directory: apps/cli
        run: pnpm execute db migrate --force
        env:
          DB_FILE_NAME: ${{ github.workspace }}/${{ env.DB_FILE_NAME_REPORT }}

  analyze:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup & Restore Node cache
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version-file: 'package.json'

      - name: Install all packages
        run: pnpm install --frozen-lockfile

      - name: Restore turbo cache
        uses: actions/cache@v4
        with:
          path: .turbo/cache
          key:
            turbo/${{ github.job }}/${{ github.ref_name }}/${{ github.sha }}
          restore-keys: |
            turbo/${{ github.job }}/${{ github.ref_name }}/
            turbo/${{ github.job }}/

      - name: Download previous main branch report
        uses: dawidd6/action-download-artifact@v11
        with:
          branch: main
          workflow: monorepo.yml
          workflow_conclusion: success
          name: ${{ env.UPLOAD_ARTIFACT_NAME }}
          if_no_artifact_found: warn
          # automatically extracts the artifact to file "repo.sqlite"

      - name: Analyze check (single size)
        working-directory: apps/cli
        if: ${{ inputs.analyze-size == '' }} # Only run if analyze-size input is not provided
        run: pnpm execute analyze > report.md
        env:
          DB_FILE_NAME: ${{ github.workspace }}/${{ env.DB_FILE_NAME_REPORT }}

      - name: Analyze check (multiple sizes)
        working-directory: apps/cli
        if: ${{ inputs.analyze-size > 0 }} # Only run if analyze-size input is provided
        run: pnpm execute analyze span --working-dir=../.. --size=${{ inputs.analyze-size }}
        env:
          DB_FILE_NAME: ${{ github.workspace }}/${{ env.DB_FILE_NAME_REPORT }}

      - name: Create PR comment
        if: github.event_name == 'pull_request' # Only create comment on pull requests
        working-directory: apps/cli
        run: gh pr comment ${{ github.event.number }} --body-file report.md --edit-last --create-if-none # upsert the last comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload report artifact
        if: github.ref == 'refs/heads/main' # Only upload on main branch
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.UPLOAD_ARTIFACT_NAME }}
          path: ${{ github.workspace }}/${{ env.DB_FILE_NAME_REPORT }}

      - name: Pre-Render report site
        if: github.ref == 'refs/heads/main' # Only upload on main branch
        run: pnpm build:prerender
        env:
          DB_FILE_NAME: ${{ github.workspace }}/${{ env.DB_FILE_NAME_REPORT }}

      - id: deployment
        if: github.ref == 'refs/heads/main' # Only upload on main branch
        name: Upload static web files as artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/web/build/client

  deploy:
    if: github.ref == 'refs/heads/main' # Only upload on main branch
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
